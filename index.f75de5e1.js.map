{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,KAAK,MAAM,SAAS,OAAQ;IAC1B,MAAM,QAAQ,SAAS,aAAa,CAAC;IACrC,MAAM,gBAAgB,cAAc,MAAM,IAAI;IAE9C,MAAM,OAAO,GAAG,MAAM,EAAE;IACxB,MAAM,SAAS,GAAG;IAClB,MAAM,SAAS,GAAG;IAClB,MAAM,WAAW,GAAG;IACpB,MAAM,MAAM,CAAC;AACf;AAEA,SAAS,cAAc,IAAI;IACzB,IAAI,eAAe;IAEnB;WAAI;KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;QACrB,IAAI,MAAM,GACR,gBAAgB,GAAG,WAAW;aACzB,IAAI,OAAO,GAAG,WAAW,IAC9B,gBAAgB,MAAM;aAEtB,gBAAgB;IAEpB;IAEA,OAAO;AACT","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n  const attributeName = separateWords(input.name);\n\n  label.htmlFor = input.id;\n  label.innerText = attributeName;\n  label.className = 'field-label';\n  input.placeholder = attributeName;\n  input.before(label);\n}\n\nfunction separateWords(word) {\n  let separatedStr = '';\n\n  [...word].forEach((ch, i) => {\n    if (i === 0) {\n      separatedStr += ch.toUpperCase();\n    } else if (ch === ch.toUpperCase()) {\n      separatedStr += ' ' + ch;\n    } else {\n      separatedStr += ch;\n    }\n  });\n\n  return separatedStr;\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}